# Generated by Django 3.0.5 on 2021-02-01 14:05

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataSourceConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbType', models.CharField(max_length=50, verbose_name='数据库类型')),
                ('version', models.CharField(max_length=50, verbose_name='版本号')),
                ('host', models.CharField(max_length=50, verbose_name='服务器名')),
                ('port', models.IntegerField(verbose_name='端口号')),
                ('username', models.CharField(max_length=50, verbose_name='账户')),
                ('password', models.CharField(max_length=50, verbose_name='密码')),
                ('dbName', models.CharField(blank=True, max_length=50, null=True, verbose_name='数据库名')),
                ('serviceName', models.CharField(blank=True, max_length=50, null=True, verbose_name='oracle服务名')),
            ],
            options={
                'verbose_name_plural': '数据源管理',
            },
        ),
        migrations.CreateModel(
            name='DataStructureManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbTypeName', models.CharField(max_length=50, verbose_name='数据库类型名称')),
                ('stockAddType', models.CharField(max_length=20, verbose_name='存量或是增量')),
                ('structureName', models.CharField(max_length=50, verbose_name='数据库结构名称')),
                ('ddlCount', models.IntegerField(default=0, verbose_name='DDL数量')),
                ('dmlCount', models.IntegerField(default=0, verbose_name='DML数量')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name_plural': '数据结构管理',
            },
        ),
        migrations.CreateModel(
            name='ExecutePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planName', models.CharField(max_length=50, verbose_name='执行计划名称')),
                ('ploy', models.CharField(blank=True, max_length=50, null=True, verbose_name='策略')),
                ('describe', models.CharField(blank=True, max_length=250, null=True, verbose_name='策略描述')),
                ('notification', models.BooleanField(verbose_name='消息通知')),
                ('startTime', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('endTime', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('sceneCaseIds', django_mysql.models.JSONField(default=dict)),
                ('executeType', models.BooleanField(verbose_name='执行方式，true代表直接运行一次，false代表按策略运行')),
                ('executeStatus', models.CharField(choices=[('1', '待启动'), ('2', '进行中'), ('3', '已完成'), ('4', '异常'), ('5', '停止')], default='1', max_length=1)),
            ],
            options={
                'verbose_name_plural': '执行计划',
            },
        ),
        migrations.CreateModel(
            name='InterfaceMange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceName', models.CharField(max_length=50, verbose_name='接口名称')),
                ('url', models.CharField(max_length=500, verbose_name='接口地址')),
                ('method', models.CharField(max_length=25, verbose_name='请求方式')),
                ('headers', django_mysql.models.JSONField(default=dict)),
                ('params', django_mysql.models.JSONField(default=dict)),
                ('formDatas', django_mysql.models.JSONField(default=dict)),
                ('bodyJson', django_mysql.models.JSONField(default=dict)),
                ('resultAsserts', django_mysql.models.JSONField(default=dict)),
                ('bodyType', models.CharField(max_length=25, verbose_name='body请求类型')),
            ],
            options={
                'verbose_name_plural': '接口测试接口管理',
            },
        ),
        migrations.CreateModel(
            name='MailConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mailHost', models.CharField(max_length=50, verbose_name='邮箱服务器')),
                ('mailUser', models.EmailField(max_length=50, verbose_name='用户名')),
                ('mailPassword', models.CharField(max_length=50, verbose_name='口令')),
                ('sender', models.EmailField(max_length=50, verbose_name='发件人')),
                ('receivers', django_mysql.models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectName', models.CharField(max_length=50, verbose_name='项目名称')),
                ('host', models.CharField(max_length=50, verbose_name='项目host')),
                ('describe', models.CharField(blank=True, max_length=150, null=True, verbose_name='项目描述')),
                ('head', models.CharField(max_length=50, verbose_name='负责人')),
            ],
            options={
                'verbose_name_plural': '接口测试项目管理',
            },
        ),
        migrations.CreateModel(
            name='SceneCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='场景用例名称')),
                ('pid', models.SmallIntegerField(default=0)),
                ('describe', models.CharField(blank=True, max_length=250, null=True, verbose_name='用例描述')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_scene_interface', to='api.ProjectManage', verbose_name='项目id')),
            ],
            options={
                'verbose_name_plural': '接口测试场景接口',
            },
        ),
        migrations.CreateModel(
            name='SqlCaseManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ddlDmlType', models.CharField(max_length=20, verbose_name='DDL或DML')),
                ('executeSql', models.TextField(null=True, verbose_name='执行SQL的语句')),
                ('sourceStock', models.IntegerField(null=True, verbose_name='主库存量')),
                ('validationSql', models.TextField(null=True, verbose_name='验证SQL的语句')),
                ('targetStock', models.IntegerField(null=True, verbose_name='备库存量')),
                ('validationResult', models.CharField(max_length=20, null=True, verbose_name='验证SQL结果')),
                ('enabled', models.BooleanField(default=True, verbose_name='启用状态')),
                ('version', django_mysql.models.JSONField(default=dict)),
                ('caseName', models.CharField(max_length=200, null=True, verbose_name='SQL用例名称')),
                ('executeResult', models.TextField(null=True, verbose_name='执行SQL结果')),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structure_sql', to='api.DataStructureManage', verbose_name='数据结构ID')),
            ],
            options={
                'verbose_name_plural': 'SQL用例管理',
            },
        ),
        migrations.CreateModel(
            name='SingleInterfaceCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceName', models.CharField(max_length=50, verbose_name='接口名称')),
                ('url', models.CharField(max_length=500, verbose_name='接口地址')),
                ('method', models.CharField(max_length=25, verbose_name='请求方式')),
                ('headers', django_mysql.models.JSONField(default=dict)),
                ('params', django_mysql.models.JSONField(default=dict)),
                ('formDatas', django_mysql.models.JSONField(default=dict)),
                ('bodyJson', django_mysql.models.JSONField(default=dict)),
                ('resultAsserts', django_mysql.models.JSONField(default=dict)),
                ('bodyType', models.CharField(max_length=25, verbose_name='body请求类型')),
                ('result', django_mysql.models.JSONField(default=dict)),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='single_interface_case', to='api.InterfaceMange')),
            ],
            options={
                'verbose_name_plural': '接口测试单一接口用例',
            },
        ),
        migrations.CreateModel(
            name='SceneInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceName', models.CharField(max_length=50, verbose_name='接口名称')),
                ('url', models.CharField(max_length=500, verbose_name='接口地址')),
                ('method', models.CharField(max_length=25, verbose_name='请求方式')),
                ('headers', django_mysql.models.JSONField(default=dict)),
                ('params', django_mysql.models.JSONField(default=dict)),
                ('formDatas', django_mysql.models.JSONField(default=dict)),
                ('bodyJson', django_mysql.models.JSONField(default=dict)),
                ('resultAsserts', django_mysql.models.JSONField(default=dict)),
                ('jsonExtract', django_mysql.models.JSONField(default=dict)),
                ('bodyType', models.CharField(max_length=25, verbose_name='body请求类型')),
                ('result', django_mysql.models.JSONField(default=dict)),
                ('updateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('sortNumber', models.SmallIntegerField(verbose_name='排序号')),
                ('frontMap', django_mysql.models.JSONField(default=dict)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_case_interface', to='api.SceneCase')),
            ],
            options={
                'verbose_name_plural': '接口测试场景接口用例',
            },
        ),
        migrations.CreateModel(
            name='ModuleTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='模块名称')),
                ('pid', models.SmallIntegerField(default=0)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_module', to='api.ProjectManage', verbose_name='项目id')),
            ],
            options={
                'verbose_name_plural': '接口测试模块管理',
            },
        ),
        migrations.CreateModel(
            name='InterfaceTestReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runNumber', models.IntegerField(verbose_name='运行次数')),
                ('UpdateTime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('result', django_mysql.models.JSONField(default=dict)),
                ('relatedId', models.IntegerField(verbose_name='关联场景接口用例的id，为了查询')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execute_plan_report', to='api.ExecutePlan', verbose_name='执行计划ID')),
            ],
            options={
                'verbose_name_plural': '接口测试报告',
            },
        ),
        migrations.AddField(
            model_name='interfacemange',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_interface', to='api.ModuleTree'),
        ),
        migrations.AddField(
            model_name='executeplan',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_execute_plan', to='api.ProjectManage', verbose_name='项目id'),
        ),
    ]
